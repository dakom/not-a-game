name: CI Workflow 

on:
  pull_request:
    branches:
      - '**'        # Run tests on any pull request for any branch
  push:
    branches:
      - main        # Run build only when changes are pushed (merged) to `main`

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: wasm32-unknown-unknown
          components: clippy, rustfmt

      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2

      - name: rustfmt
        run: cargo fmt --all -- --check

      - name: clippy
        run: cargo clippy --all --all-features --tests -- -D warnings

      - name: cargo test
        run: cargo test --all-features

  pages_build:
    name: Build Pages 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: wasm32-unknown-unknown
          components: clippy, rustfmt

      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Install Trunk
        uses: jetli/trunk-action@v0.5.0
        with:
          version: 'latest' 
      
      - name: Build frontend
        run: trunk build --release --public-url=https://dakom.github.io/not-a-game/
      
      - name: Copy for 404 redirect
        run: cp ./dist/index.html ./dist/404.html

      - name: Copy media folder
        run: cp -r ./media ./dist

      - name: Upload artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: ./dist
  
  pages_deploy:
    name: Deploy Pages
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: pages_build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages